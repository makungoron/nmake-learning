# Makefile.nmake

# Compiler and flags
CPP = cl.exe
CFLAGS = /EHsc /W4 /Iinclude  # Include any additional flags or directories

# Directories
SRC_DIR = src
OBJ_DIR = obj
BIN_DIR = bin

# Output executable
TARGET = 03-more_nested_files.exe

SRC_DIRS = src src\component src\tool src\tool\common
OBJ_DIRS = obj obj\component obj\tool obj\tool\common
SRCS = src\component\base.cpp src\component\three.cpp src\lib.cpp src\main.cpp src\tool\calc.cpp src\tool\common\common_tool.cpp
OBJS = obj\component\base.obj obj\component\three.obj obj\lib.obj obj\main.obj obj\tool\calc.obj obj\tool\common\common_tool.obj

!MESSAGE SRCS = $(SRCS)
!MESSAGE OBJS = $(OBJS)

all: $(TARGET)
$(TARGET) : $(OBJS)
	@echo Linking...
	@if NOT EXIST $(BIN_DIR) mkdir $(BIN_DIR)
	$(CPP) /nologo $(OBJS) /Fe"$(BIN_DIR)\$(TARGET)"

{src\}.cpp{obj\}.obj:
	@echo Compiling $< $@
	@echo $(@D)
	@if NOT EXIST $(@D) mkdir $(@D)
	$(CPP) /nologo /c $(CFLAGS) $< /Fo"$@"

{src\component\}.cpp{obj\component\}.obj:
	@echo Compiling $< $@
	@echo $(@D)
	@if NOT EXIST $(@D) mkdir $(@D)
	$(CPP) /nologo /c $(CFLAGS) $< /Fo"$@"

{src\tool\}.cpp{obj\tool\}.obj:
	@echo Compiling $< $@
	@echo $(@D)
	@if NOT EXIST $(@D) mkdir $(@D)
	$(CPP) /nologo /c $(CFLAGS) $< /Fo"$@"

{src\tool\common\}.cpp{obj\tool\common\}.obj:
	@echo Compiling $< $@
	@echo $(@D)
	@if NOT EXIST $(@D) mkdir $(@D)
	$(CPP) /nologo /c $(CFLAGS) $< /Fo"$@"

# Clean up build files
clean:
	del /Q /S $(OBJ_DIR)\*.obj
	del /Q $(BIN_DIR)\$(TARGET)
